<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>XENSIV™<sp/>PAS<sp/>CO2<sp/>sensor</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Overview</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>provides<sp/>functions<sp/>for<sp/>interfacing<sp/>with<sp/>the<sp/>XENSIV™<sp/>PAS<sp/>CO2<sp/>sensor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>sensor<sp/>features<sp/>a<sp/>small<sp/>form<sp/>factor<sp/>with<sp/>accurate<sp/>and<sp/>robust<sp/>performance<sp/>at<sp/>ppm<sp/>level<sp/>(±30<sp/>ppm<sp/>±3%<sp/>of<sp/>reading).<sp/>The<sp/>XENSIV™<sp/>PAS<sp/>CO2<sp/>sensor<sp/>integrates<sp/>a<sp/>photo-acoustic<sp/>transducer<sp/>and<sp/>a<sp/>microcontroller<sp/>which<sp/>runs<sp/>ppm<sp/>calculations<sp/>as<sp/>well<sp/>as<sp/>compensation<sp/>and<sp/>configuration<sp/>algorithms<sp/>on<sp/>the<sp/>PCB.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Quick<sp/>start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>the<sp/>hardware<sp/>setup,<sp/>check<sp/>the<sp/>&quot;Quick<sp/>start<sp/>with<sp/>the<sp/>PSoC™<sp/>6<sp/>Wi-Fi<sp/>Bluetooth&amp;reg;<sp/>pioneer<sp/>kit&quot;<sp/>section<sp/>of<sp/>the<sp/>[Programming<sp/>guide<sp/>for<sp/>XENSIV™<sp/>PAS<sp/>CO2<sp/>sensor](https://www.infineon.com/cms/de/product/sensor/co2-sensors/#!?fileId=5546d4627600a6bc0176041139e77780).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](docs/images/pasco2_i2c_connection.png)</highlight></codeline>
<codeline><highlight class="normal">![](docs/html/pasco2_i2c_connection.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Figure<sp/>1.<sp/>XENSIV™<sp/>PAS<sp/>CO2<sp/>Sensor2Go<sp/>kit<sp/>I2C<sp/>interface<sp/>connection<sp/>to<sp/>the<sp/>PSoC™<sp/>6<sp/>Wi-Fi<sp/>Bluetooth&amp;reg;<sp/>pioneer<sp/>kit**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Do<sp/>the<sp/>following<sp/>to<sp/>create<sp/>a<sp/>simple<sp/>application<sp/>which<sp/>outputs<sp/>the<sp/>CO2<sp/>ppm<sp/>data<sp/>from<sp/>the<sp/>sensor<sp/>to<sp/>the<sp/>UART.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>Create<sp/>an<sp/>empty<sp/>PSoC™<sp/>6<sp/>application.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>Add<sp/>this<sp/>library<sp/>to<sp/>the<sp/>application.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">3.<sp/>Add<sp/>the<sp/>retarget-io<sp/>library<sp/>using<sp/>the<sp/>library<sp/>manager.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">4.<sp/>Place<sp/>the<sp/>following<sp/>code<sp/>in<sp/>the<sp/>*main.c*<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">5.<sp/>Define<sp/>I2C<sp/>SDA<sp/>and<sp/>SCL<sp/>as<sp/>appropriate<sp/>for<sp/>your<sp/>hardware<sp/>configuration:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">6.<sp/>Build<sp/>the<sp/>application<sp/>and<sp/>program<sp/>the<sp/>kit.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;cyhal.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;cybsp.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;cy_retarget_io.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;xensiv_pasco2_mtb.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*******************************************************************************</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Macros</highlight></codeline>
<codeline><highlight class="normal">*******************************************************************************/</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PIN_XENSIV_PASCO2_I2C_SDA<sp/><sp/><sp/>NC</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PIN_XENSIV_PASCO2_I2C_SCL<sp/><sp/><sp/>NC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>I2C_MASTER_FREQUENCY<sp/>(100000U)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>WAIT_SENSOR_RDY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2000)<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Wait<sp/>time<sp/>for<sp/>sensor<sp/>ready<sp/>(milliseconds)<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*<sp/>The<sp/>CO2<sp/>concentration<sp/>value<sp/>acquired<sp/>by<sp/>the<sp/>sensor<sp/>depends<sp/>on<sp/>the<sp/>external<sp/>atmospheric<sp/>pressure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>To<sp/>compensate<sp/>for<sp/>this<sp/>effect,<sp/>pressure<sp/>values<sp/>can<sp/>be<sp/>acquired<sp/>from<sp/>a<sp/>pressure<sp/>sensor<sp/>such<sp/>as<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>Infineon<sp/>XENSIV&amp;trade;<sp/>DPS3xx.<sp/>(https://github.com/Infineon/sensor-xensiv-dps3xx)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>DEFAULT_PRESSURE_REF_HPA<sp/><sp/><sp/><sp/>(0x3F7)<sp/><sp/><sp/><sp/><sp/>/*<sp/>Default<sp/>atmospheric<sp/>pressure<sp/>to<sp/>compensate<sp/>for<sp/>(hPa)<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*******************************************************************************</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Global<sp/>Variables</highlight></codeline>
<codeline><highlight class="normal">*******************************************************************************/</highlight></codeline>
<codeline><highlight class="normal">static<sp/>cyhal_i2c_t<sp/>cyhal_i2c;</highlight></codeline>
<codeline><highlight class="normal">static<sp/>xensiv_pasco2_t<sp/>xensiv_pasco2;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>main(void)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>result<sp/>=<sp/>CY_RSLT_SUCCESS;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*<sp/>Initialize<sp/>the<sp/>device<sp/>and<sp/>board<sp/>peripherals<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cybsp_init();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(result<sp/>==<sp/>CY_RSLT_SUCCESS);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>__enable_irq();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*<sp/>Initialize<sp/>retarget-io<sp/>to<sp/>use<sp/>the<sp/>debug<sp/>UART<sp/>port.<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cy_retarget_io_init(CYBSP_DEBUG_UART_TX,<sp/>CYBSP_DEBUG_UART_RX,<sp/>CY_RETARGET_IO_BAUDRATE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(result<sp/>==<sp/>CY_RSLT_SUCCESS);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;XENSIV<sp/>PAS<sp/>CO2<sp/>Example\r\n&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*<sp/>Initialize<sp/>I2C<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cyhal_i2c_cfg_t<sp/>i2c_master_config<sp/>=<sp/>{CYHAL_I2C_MODE_MASTER,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2C_MASTER_FREQUENCY};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cyhal_i2c_init(&amp;cyhal_i2c,<sp/>PIN_XENSIV_PASCO2_I2C_SDA,<sp/>PIN_XENSIV_PASCO2_I2C_SCL,<sp/>NULL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(result<sp/>==<sp/>CY_RSLT_SUCCESS);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cyhal_i2c_configure(&amp;cyhal_i2c,<sp/>&amp;i2c_master_config);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(result<sp/>==<sp/>CY_RSLT_SUCCESS);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cyhal_system_delay_ms(WAIT_SENSOR_RDY_MS);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*<sp/>Initialize<sp/>PAS<sp/>CO2<sp/>sensor<sp/>with<sp/>default<sp/>parameter<sp/>values<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>xensiv_pasco2_mtb_init_i2c(&amp;xensiv_pasco2,<sp/>&amp;cyhal_i2c);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>CY_RSLT_SUCCESS)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;PAS<sp/>CO2<sp/>device<sp/>initialization<sp/>error&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(;;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>xensiv_pasco2_mtb_read(&amp;xensiv_pasco2,<sp/>DEFAULT_PRESSURE_REF_HPA,<sp/>&amp;ppm);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>CY_RSLT_SUCCESS)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;CO2<sp/>%d<sp/>ppm.\n&quot;,<sp/>ppm);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_system_delay_ms(10);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Use<sp/>the<sp/>library<sp/>in<sp/>your<sp/>own<sp/>platform</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>library<sp/>can<sp/>be<sp/>used<sp/>in<sp/>your<sp/>own<sp/>platform<sp/>by<sp/>copying<sp/>three<sp/>files<sp/>to<sp/>your<sp/>project,<sp/>i.e.,<sp/>*xensiv_pasco2.c*,<sp/>*xensiv_pasco2.h*<sp/>and<sp/>*xensiv_pasco2_regs.h*.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>library<sp/>depends<sp/>on<sp/>platform-specific<sp/>implementation<sp/>of<sp/>the<sp/>following<sp/>functions:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>xensiv_pasco2_plat_i2c_transfer(void<sp/>*<sp/>ctx,<sp/>uint16_t<sp/>dev_addr,<sp/>const<sp/>uint8_t<sp/>*<sp/>tx_buffer,<sp/>size_t<sp/>tx_len,<sp/>uint8_t<sp/>*<sp/>rx_buffer,<sp/>size_t<sp/>rx_len);</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>xensiv_pasco2_plat_uart_read(void<sp/>*ctx,<sp/>uint8_t<sp/>*<sp/>data,<sp/>size_t<sp/>len);</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>xensiv_pasco2_plat_uart_write(void<sp/>*ctx,<sp/>const<sp/>uint8_t<sp/>*<sp/>data,<sp/>size_t<sp/>len);</highlight></codeline>
<codeline><highlight class="normal">void<sp/>xensiv_pasco2_plat_delay(uint32_t<sp/>ms);</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>xensiv_pasco2_plat_htons(uint16_t<sp/>x);</highlight></codeline>
<codeline><highlight class="normal">void<sp/>xensiv_pasco2_plat_assert(int<sp/>expr);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>library<sp/>provides<sp/>default<sp/>implementation<sp/>of<sp/>these<sp/>functions.<sp/>The<sp/>default<sp/>implementations<sp/>should<sp/>be<sp/>overridden<sp/>when<sp/>using<sp/>the<sp/>driver<sp/>in<sp/>a<sp/>target<sp/>platform.</highlight></codeline>
<codeline><highlight class="normal">See<sp/>the<sp/>implementation<sp/>for<sp/>the<sp/>platform-specific<sp/>functions<sp/>in<sp/>*xensiv_pasco2_mtb.c*<sp/>using<sp/>the<sp/>PSoC™<sp/>6<sp/>HAL.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>More<sp/>information</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[PAS<sp/>CO2<sp/>sensor<sp/>API<sp/>reference<sp/>guide](https://infineon.github.io/sensor-xensiv-pasco2/pasco2_api_reference_manual/html/index.html)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[XENSIV™<sp/>PAS<sp/>CO2<sp/>sensor](https://www.infineon.com/cms/en/product/sensor/co2-sensors/)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Connected<sp/>sensor<sp/>kit](https://www.infineon.com/connectedsensorkit)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[EVAL_PASCO2_MINIBOARD](https://www.infineon.com/cms/en/product/evaluation-boards/eval_pasco2_miniboard)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Infineon<sp/>Technologies<sp/>website](https://www.infineon.com)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Infineon<sp/>Technologies<sp/>GitHub<sp/>repos](https://github.com/infineon)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[ModusToolbox&amp;trade;<sp/>software](https://www.cypress.com/products/modustoolbox-software-environment)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline><highlight class="normal">©<sp/>Infineon<sp/>Technologies<sp/>AG,<sp/>2021.</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
