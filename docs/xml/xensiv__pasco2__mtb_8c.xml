<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="xensiv__pasco2__mtb_8c" kind="file" language="C++">
    <compoundname>xensiv_pasco2_mtb.c</compoundname>
    <includes local="yes">cyhal_system.h</includes>
    <includes refid="xensiv__pasco2__mtb_8h" local="yes">xensiv_pasco2_mtb.h</includes>
    <incdepgraph>
      <node id="1">
        <label>xensiv_pasco2_mtb.c</label>
        <link refid="xensiv__pasco2__mtb_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cyhal_system.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="xensiv__pasco2__mtb_8c_1a7028eadd7af68ed6afca0f1ebe920e07" prot="public" static="no">
        <name>XENSIV_PASCO2_I2C_TIMEOUT_MS</name>
        <initializer>(500U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="31" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xensiv__pasco2__mtb_8c_1a1a07d74561c9915d4c0cd9df85a4b146" prot="public" static="no">
        <name>XENSIV_PASCO2_UART_TIMEOUT_MS</name>
        <initializer>(500U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="32" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xensiv__pasco2__mtb_8c_1a9145d7002d1614c743899296cd7b3cef" prot="public" static="no">
        <name>XENSIV_PASCO2_MEAS_RATE_S</name>
        <initializer>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="34" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xensiv__pasco2__mtb_8c_1a43a47507416c9564c1ebecf4cab9b5c9" prot="public" static="no">
        <name>XENSIV_PASCO2_ERROR</name>
        <param><defname>x</defname></param>
        <initializer>                                                 (((x) == <ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref>) ? CY_RSLT_SUCCESS :\
                                                 CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR, CY_RSLT_MODULE_BOARD_HARDWARE_XENSIV_PASCO2, (x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="36" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__board__libs__mtb_1gabea706545fb1e82b9e4e568105a23d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t xensiv_pasco2_mtb_init_i2c</definition>
        <argsstring>(xensiv_pasco2_t *dev, cyhal_i2c_t *i2c)</argsstring>
        <name>xensiv_pasco2_mtb_init_i2c</name>
        <param>
          <type><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>cyhal_i2c_t *</type>
          <declname>i2c</declname>
        </param>
        <briefdescription>
<para>Initializes the XENSIV™ PAS CO2 sensor and configures it to use the specified I2C peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ModusToolbox&amp;trade PAS CO2 object. The caller must allocate the memory for this object but the init function will initialize its contents </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">i2c</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an initialized I2C object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CY_RSLT_SUCCESS if the initialization was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="39" column="11" bodyfile="xensiv_pasco2_mtb.c" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__mtb_1ga628f5739346a7e1babdb03ae51f97a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t xensiv_pasco2_mtb_init_uart</definition>
        <argsstring>(xensiv_pasco2_t *dev, cyhal_uart_t *uart)</argsstring>
        <name>xensiv_pasco2_mtb_init_uart</name>
        <param>
          <type><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>cyhal_uart_t *</type>
          <declname>uart</declname>
        </param>
        <briefdescription>
<para>Initializes the XENSIV™ PAS CO2 sensor, and configures it to use the specified UART peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ModusToolbox&amp;trade PAS CO2 object. The caller must allocate the memory for this object but the init function will initialize its contents </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uart</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an initialized UART object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CY_RSLT_SUCCESS if the initialization was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="53" column="11" bodyfile="xensiv_pasco2_mtb.c" bodystart="53" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__mtb_1gace71b8639212c85b83adf9178c0b2a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t xensiv_pasco2_mtb_interrupt_init</definition>
        <argsstring>(const xensiv_pasco2_t *dev, const xensiv_pasco2_interrupt_config_t int_config, uint16_t alarm_threshold, cyhal_gpio_t pin, uint8_t intr_priority, cyhal_gpio_event_callback_t callback, void *callback_arg)</argsstring>
        <name>xensiv_pasco2_mtb_interrupt_init</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref></type>
          <declname>int_config</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>alarm_threshold</declname>
        </param>
        <param>
          <type>cyhal_gpio_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>intr_priority</declname>
        </param>
        <param>
          <type>cyhal_gpio_event_callback_t</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_arg</declname>
        </param>
        <briefdescription>
<para>Configures a GPIO pin as an interrupt for the PAS CO2 sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This initializes and configures the pin as an interrupt, and calls the PAS CO2 interrupt configuration API with the application-supplied settings structure <simplesect kind="note"><para>Should be called only after <ref refid="group__group__board__libs__mtb_1gabea706545fb1e82b9e4e568105a23d5b" kindref="member">xensiv_pasco2_mtb_init_i2c</ref> or <ref refid="group__group__board__libs__mtb_1ga628f5739346a7e1babdb03ae51f97a86" kindref="member">xensiv_pasco2_mtb_init_uart</ref>. </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__group__board__libs__mtb_1gaddabe93a90bf10824a26019202332ec1" kindref="member">xensiv_pasco2_mtb_interrupt_init_ex</ref> </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_config</parametername>
</parameternamelist>
<parameterdescription>
<para>New sensor device interrupt configuration to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alarm_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>New alarm threshold value to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin connected to the INT pin of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">intr_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority for NVIC interrupt events </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to call when the specified event happens. Pass NULL to unregister the handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Generic argument that will be provided to the callback when called; can be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CY_RSLT_SUCCESS if interrupt was successfully enabled; an error occurred while initializing the pin otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="67" column="11" bodyfile="xensiv_pasco2_mtb.c" bodystart="67" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__mtb_1gaddabe93a90bf10824a26019202332ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t xensiv_pasco2_mtb_interrupt_init_ex</definition>
        <argsstring>(xensiv_pasco2_t *dev, const xensiv_pasco2_interrupt_config_t int_config, uint16_t alarm_threshold, cyhal_gpio_t pin, uint8_t intr_priority, xensiv_pasco2_mtb_interrupt_cb_t *interrupt_cb)</argsstring>
        <name>xensiv_pasco2_mtb_interrupt_init_ex</name>
        <param>
          <type><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref></type>
          <declname>int_config</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>alarm_threshold</declname>
        </param>
        <param>
          <type>cyhal_gpio_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>intr_priority</declname>
        </param>
        <param>
          <type><ref refid="structxensiv__pasco2__mtb__interrupt__cb__t" kindref="compound">xensiv_pasco2_mtb_interrupt_cb_t</ref> *</type>
          <declname>interrupt_cb</declname>
        </param>
        <briefdescription>
<para>Configures a GPIO pin as an interrupt for the PAS CO2 sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This initializes and configures the pin as an interrupt, and calls the PAS CO2 interrupt configuration API with the application-supplied settings structure <simplesect kind="note"><para>Should be called only after <ref refid="group__group__board__libs__mtb_1gabea706545fb1e82b9e4e568105a23d5b" kindref="member">xensiv_pasco2_mtb_init_i2c</ref> or <ref refid="group__group__board__libs__mtb_1ga628f5739346a7e1babdb03ae51f97a86" kindref="member">xensiv_pasco2_mtb_init_uart</ref>. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ModusToolbox&amp;trade PAS CO2 sensor object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_config</parametername>
</parameternamelist>
<parameterdescription>
<para>New sensor device interrupt configuration to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alarm_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>New alarm threshold value to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin connected to the INT pin of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">intr_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority for NVIC interrupt events </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Instances of this object are expected to persist for the length of time the callback is registered. As such, care must be given if declaring it on the stack to ensure the frame does not go away while the callback is still registered. </para>
</simplesect>
<simplesect kind="return"><para>CY_RSLT_SUCCESS if interrupt was successfully enabled; an error occurred while initializing the pin otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="110" column="11" bodyfile="xensiv_pasco2_mtb.c" bodystart="110" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__mtb_1ga1f3304bd562b511f18df659342011aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t xensiv_pasco2_mtb_read</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t press_ref, uint16_t *co2_ppm_val)</argsstring>
        <name>xensiv_pasco2_mtb_read</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>press_ref</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>co2_ppm_val</declname>
        </param>
        <briefdescription>
<para>Reads the CO2 value value if available. </para>
        </briefdescription>
        <detaileddescription>
<para>This checks whether a new CO2 value is available, in which case it returns it and sets the new pressure reference value for the next measurement <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ModusToolbox&amp;trade PAS CO2 object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">press_ref</parametername>
</parameternamelist>
<parameterdescription>
<para>New pressure reference value to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">co2_ppm_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the CO2 ppm value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CY_RSLT_SUCCESS if PPM value was successfully read. XENSIV_PASCO2_RSLT_READ_NRDY if the measurement value is not ready yet; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="146" column="11" bodyfile="xensiv_pasco2_mtb.c" bodystart="146" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga79ba3ff2b6d3b6e0d59277ad2c066295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_i2c_transfer</definition>
        <argsstring>(void *ctx, uint16_t dev_addr, const uint8_t *tx_buffer, size_t tx_len, uint8_t *rx_buffer, size_t rx_len)</argsstring>
        <name>xensiv_pasco2_plat_i2c_transfer</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dev_addr</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>tx_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tx_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rx_len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to perform I2C write/read transfer. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronously writes a block of data and optionally receive a block of data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Target platform object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>device address (7-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C send data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_len</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C send data size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C receive data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Can be NULL to indicate no read access. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rx_len</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C receive data size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the I2C transfer was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="163" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="163" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga30258b2d0b775dd70dac784ba7583a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_uart_read</definition>
        <argsstring>(void *ctx, uint8_t *data, size_t len)</argsstring>
        <name>xensiv_pasco2_plat_uart_read</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to read over UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>UART object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to receive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the UART read was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="182" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="182" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga9300d953c5b0e034b91c1eb35e5b6a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_uart_write</definition>
        <argsstring>(void *ctx, uint8_t *data, size_t len)</argsstring>
        <name>xensiv_pasco2_plat_uart_write</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to write over UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>UART object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmit buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to transmit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the UART write was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="208" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="208" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga6b0f690782033eb82ac184e541152801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xensiv_pasco2_plat_delay</definition>
        <argsstring>(uint32_t ms)</argsstring>
        <name>xensiv_pasco2_plat_delay</name>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function that waits for a specified time period in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of miliseconds to wait for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="227" column="6" bodyfile="xensiv_pasco2_mtb.c" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga227451919676d916a38ac90daea339b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t xensiv_pasco2_plat_htons</definition>
        <argsstring>(uint16_t x)</argsstring>
        <name>xensiv_pasco2_plat_htons</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to reverse the byte order (16-bit) A sample implementation would look like. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">return<sp/>((uint16_t)(((x<sp/>&amp;<sp/>0x00ffU)<sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x<sp/>&amp;<sp/>0xff00U)<sp/>&gt;&gt;<sp/>8)));</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to reverse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reversed value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="232" column="10" bodyfile="xensiv_pasco2_mtb.c" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs__platform_1ga1a3f8502b60fd6f507b66dc91210b8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xensiv_pasco2_plat_assert</definition>
        <argsstring>(int expr)</argsstring>
        <name>xensiv_pasco2_plat_assert</name>
        <param>
          <type>int</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function that implements a runtime assertion; used to verify the assumptions made by the program and take appropiate actions if assumption is false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be verified </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2_mtb.c" line="237" column="6" bodyfile="xensiv_pasco2_mtb.c" bodystart="237" bodyend="241"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Description: This file contains the MTB platform functions implementation for interacting with the XENSIV™ PAS CO2 sensor. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2021-2022 Infineon Technologies AG SPDX-License-Identifier: Apache-2.0</para>
</simplesect>
Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim></para>
<para>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***********************************************************************************************/</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#if<sp/>defined(CY_USING_HAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyhal_system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xensiv_pasco2_mtb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_I2C_TIMEOUT_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(500U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_UART_TIMEOUT_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(500U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_MEAS_RATE_S<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ERROR(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>==<sp/>XENSIV_PASCO2_OK)<sp/>?<sp/>CY_RSLT_SUCCESS<sp/>:\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR,<sp/>CY_RSLT_MODULE_BOARD_HARDWARE_XENSIV_PASCO2,<sp/>(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__board__libs__mtb_1gabea706545fb1e82b9e4e568105a23d5b" kindref="member">xensiv_pasco2_mtb_init_i2c</ref>(<ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>cyhal_i2c_t<sp/>*<sp/>i2c)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(dev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(i2c<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1ga38fe4b44ddd282af3f28bc4080932a95" kindref="member">xensiv_pasco2_init_i2c</ref>(dev,<sp/>i2c);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gafcd452d674763aa73e6be0720f86cdf9" kindref="member">xensiv_pasco2_start_continuous_mode</ref>(dev,<sp/>XENSIV_PASCO2_MEAS_RATE_S);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XENSIV_PASCO2_ERROR(res);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__board__libs__mtb_1ga628f5739346a7e1babdb03ae51f97a86" kindref="member">xensiv_pasco2_mtb_init_uart</ref>(<ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>cyhal_uart_t<sp/>*<sp/>uart)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(dev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(uart<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1ga9fa617ee552cb1672d7d1d4fedd54783" kindref="member">xensiv_pasco2_init_uart</ref>(dev,<sp/>uart);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gafcd452d674763aa73e6be0720f86cdf9" kindref="member">xensiv_pasco2_start_continuous_mode</ref>(dev,<sp/>XENSIV_PASCO2_MEAS_RATE_S);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XENSIV_PASCO2_ERROR(res);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__board__libs__mtb_1gace71b8639212c85b83adf9178c0b2a73" kindref="member">xensiv_pasco2_mtb_interrupt_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref><sp/>int_config,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>alarm_threshold,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_t<sp/>pin,<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>intr_priority,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_event_callback_t<sp/>callback,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>callback_arg)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(dev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/><sp/>=<sp/><ref refid="group__group__board__libs_1ga8cddfe96e78141108553b0725733c2b8" kindref="member">xensiv_pasco2_set_interrupt_config</ref>(dev,<sp/>int_config);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gaba1f03526ef8182b9b36b7f428436bd4" kindref="member">xensiv_pasco2_set_alarm_threshold</ref>(dev,<sp/>alarm_threshold);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(callback<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>status<sp/>=<sp/>cyhal_gpio_init(pin,<sp/>CYHAL_GPIO_DIR_INPUT,<sp/>CYHAL_GPIO_DRIVE_NONE,<sp/>(int_config.<ref refid="unionxensiv__pasco2__interrupt__config__t_1a773d45d985d2be3ab7d0dabce00ee95e" kindref="member">b</ref>.int_typ<sp/>==<sp/>(uint32_t)<ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</ref>)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>==<sp/>status)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(CYHAL_API_VERSION)<sp/>&amp;&amp;<sp/>(CYHAL_API_VERSION<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_callback_data_t<sp/>cb_data<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.callback<sp/>=<sp/>callback,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.callback_arg<sp/>=<sp/>callback_arg</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_register_callback(pin,<sp/>&amp;cb_data);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_register_callback(pin,<sp/>callback,<sp/>callback_arg);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_enable_event(pin,<sp/>(int_config.<ref refid="unionxensiv__pasco2__interrupt__config__t_1a773d45d985d2be3ab7d0dabce00ee95e" kindref="member">b</ref>.int_typ<sp/>==<sp/>(uint32_t)<ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</ref>)<sp/>?<sp/>CYHAL_GPIO_IRQ_FALL<sp/>:<sp/>CYHAL_GPIO_IRQ_RISE,<sp/>intr_priority,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XENSIV_PASCO2_ERROR(res);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__board__libs__mtb_1gaddabe93a90bf10824a26019202332ec1" kindref="member">xensiv_pasco2_mtb_interrupt_init_ex</ref>(<ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref><sp/>int_config,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>alarm_threshold,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_t<sp/>pin,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>intr_priority,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxensiv__pasco2__mtb__interrupt__cb__t" kindref="compound">xensiv_pasco2_mtb_interrupt_cb_t</ref><sp/>*<sp/>interrupt_cb)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(dev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(interrupt_cb<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1ga8cddfe96e78141108553b0725733c2b8" kindref="member">xensiv_pasco2_set_interrupt_config</ref>(dev,<sp/>int_config);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gaba1f03526ef8182b9b36b7f428436bd4" kindref="member">xensiv_pasco2_set_alarm_threshold</ref>(dev,<sp/>alarm_threshold);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>status<sp/>=<sp/>cyhal_gpio_init(pin,<sp/>CYHAL_GPIO_DIR_INPUT,<sp/>CYHAL_GPIO_DRIVE_NONE,<sp/>(int_config.<ref refid="unionxensiv__pasco2__interrupt__config__t_1a773d45d985d2be3ab7d0dabce00ee95e" kindref="member">b</ref>.int_typ<sp/>==<sp/>(uint32_t)<ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</ref>)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>==<sp/>status)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CYHAL_API_VERSION)<sp/>&amp;&amp;<sp/>(CYHAL_API_VERSION<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_register_callback(pin,<sp/>(cyhal_gpio_callback_data_t*)<sp/>interrupt_cb);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_register_callback(pin,<sp/>interrupt_cb-&gt;<ref refid="structxensiv__pasco2__mtb__interrupt__cb__t_1a9763e6b44be250dc24f7ecc4956b0a8a" kindref="member">cb</ref>,<sp/>interrupt_cb-&gt;<ref refid="structxensiv__pasco2__mtb__interrupt__cb__t_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyhal_gpio_enable_event(pin,<sp/>(int_config.<ref refid="unionxensiv__pasco2__interrupt__config__t_1a773d45d985d2be3ab7d0dabce00ee95e" kindref="member">b</ref>.int_typ<sp/>==<sp/>(uint32_t)<ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</ref>)<sp/>?<sp/>CYHAL_GPIO_IRQ_FALL<sp/>:<sp/>CYHAL_GPIO_IRQ_RISE,<sp/>intr_priority,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XENSIV_PASCO2_ERROR(res);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__board__libs__mtb_1ga1f3304bd562b511f18df659342011aea" kindref="member">xensiv_pasco2_mtb_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>press_ref,<sp/>uint16_t<sp/>*<sp/>co2_ppm_val)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(dev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(co2_ppm_val<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gab38f6448bea3e370f3901bc09f53d83a" kindref="member">xensiv_pasco2_get_result</ref>(dev,<sp/>co2_ppm_val);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="group__group__board__libs_1gad4af4f6ec5c55181e140ad0cd0463e87" kindref="member">xensiv_pasco2_set_pressure_compensation</ref>(dev,<sp/>press_ref);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XENSIV_PASCO2_ERROR(res);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/****************************<sp/>driver<sp/>platform<sp/>specific<sp/>implementation<sp/><sp/>**********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs__platform_1ga79ba3ff2b6d3b6e0d59277ad2c066295" kindref="member">xensiv_pasco2_plat_i2c_transfer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctx,<sp/>uint16_t<sp/>dev_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>tx_buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tx_len,<sp/>uint8_t<sp/>*<sp/>rx_buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rx_len)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(tx_buffer<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>cyhal_i2c_t<sp/>*<sp/>i2c<sp/>=<sp/>(cyhal_i2c_t<sp/>*)ctx;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>send_stop<sp/>=<sp/>(rx_buffer<sp/>!=<sp/>NULL)<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>result<sp/>=<sp/>cyhal_i2c_master_write(i2c,<sp/>dev_addr,<sp/>tx_buffer,<sp/>(uint16_t)(tx_len<sp/>&amp;<sp/>0xffffU),<sp/>XENSIV_PASCO2_I2C_TIMEOUT_MS,<sp/>send_stop);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CY_RSLT_SUCCESS<sp/>==<sp/>result)<sp/>&amp;&amp;<sp/>(rx_buffer<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cyhal_i2c_master_read(i2c,<sp/>dev_addr,<sp/>rx_buffer,<sp/>(uint16_t)(rx_len<sp/>&amp;<sp/>0xffffU),<sp/>XENSIV_PASCO2_I2C_TIMEOUT_MS,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>==<sp/>result)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" kindref="member">XENSIV_PASCO2_ERR_COMM</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs__platform_1ga30258b2d0b775dd70dac784ba7583a02" kindref="member">xensiv_pasco2_plat_uart_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctx,<sp/>uint8_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(data<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>result<sp/>=<sp/><ref refid="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" kindref="member">XENSIV_PASCO2_ERR_COMM</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>cyhal_uart_t<sp/>*<sp/>uart<sp/>=<sp/>(cyhal_uart_t<sp/>*)ctx;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>timeout<sp/>=<sp/>XENSIV_PASCO2_UART_TIMEOUT_MS;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cyhal_uart_readable(uart)<sp/>&lt;<sp/>len)<sp/>&amp;&amp;<sp/>(timeout<sp/>&gt;<sp/>0U))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)cyhal_system_delay_ms(1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout--;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xfer_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cyhal_uart_read(uart,<sp/>data,<sp/>&amp;xfer_len);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((CY_RSLT_SUCCESS<sp/>==<sp/>result)<sp/>&amp;&amp;<sp/>(len<sp/>==<sp/>xfer_len))<sp/>?</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" kindref="member">XENSIV_PASCO2_ERR_COMM</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs__platform_1ga9300d953c5b0e034b91c1eb35e5b6a87" kindref="member">xensiv_pasco2_plat_uart_write</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctx,<sp/>uint8_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(data<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>result<sp/>=<sp/><ref refid="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" kindref="member">XENSIV_PASCO2_ERR_COMM</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>cyhal_uart_t<sp/>*<sp/>uart<sp/>=<sp/>(cyhal_uart_t<sp/>*)ctx;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)cyhal_uart_clear(uart);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xfer_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cyhal_uart_write(uart,<sp/>data,<sp/>&amp;xfer_len);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((CY_RSLT_SUCCESS<sp/>==<sp/>result)<sp/>&amp;&amp;<sp/>(len<sp/>==<sp/>xfer_len))<sp/>?</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" kindref="member">XENSIV_PASCO2_OK</ref><sp/>:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" kindref="member">XENSIV_PASCO2_ERR_COMM</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__group__board__libs__platform_1ga6b0f690782033eb82ac184e541152801" kindref="member">xensiv_pasco2_plat_delay</ref>(uint32_t<sp/>ms)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)cyhal_system_delay_ms(ms);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">uint16_t<sp/><ref refid="group__group__board__libs__platform_1ga227451919676d916a38ac90daea339b3" kindref="member">xensiv_pasco2_plat_htons</ref>(uint16_t<sp/>x)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)__REV16(x);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__group__board__libs__platform_1ga1a3f8502b60fd6f507b66dc91210b8b6" kindref="member">xensiv_pasco2_plat_assert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expr)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(expr);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)expr;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>release<sp/>build<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(CY_USING_HAL)</highlight></codeline>
    </programlisting>
    <location file="xensiv_pasco2_mtb.c"/>
  </compounddef>
</doxygen>
