<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="xensiv__pasco2_8h" kind="file" language="C++">
    <compoundname>xensiv_pasco2.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="xensiv__pasco2__regs_8h" local="yes">xensiv_pasco2_regs.h</includes>
    <includedby refid="xensiv__pasco2_8c" local="yes">xensiv_pasco2.c</includedby>
    <includedby refid="xensiv__pasco2__mtb_8h" local="yes">xensiv_pasco2_mtb.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>xensiv_pasco2.h</label>
        <link refid="xensiv__pasco2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="unionxensiv__pasco2__id__t" prot="public">xensiv_pasco2_id_t</innerclass>
    <innerclass refid="unionxensiv__pasco2__status__t" prot="public">xensiv_pasco2_status_t</innerclass>
    <innerclass refid="unionxensiv__pasco2__measurement__config__t" prot="public">xensiv_pasco2_measurement_config_t</innerclass>
    <innerclass refid="unionxensiv__pasco2__interrupt__config__t" prot="public">xensiv_pasco2_interrupt_config_t</innerclass>
    <innerclass refid="unionxensiv__pasco2__meas__status__t" prot="public">xensiv_pasco2_meas_status_t</innerclass>
    <innerclass refid="structxensiv__pasco2__t" prot="public">xensiv_pasco2_t</innerclass>
    <innerclass refid="structxensiv__pasco2__id__t_8b" prot="public">xensiv_pasco2_id_t.b</innerclass>
    <innerclass refid="structxensiv__pasco2__status__t_8b" prot="public">xensiv_pasco2_status_t.b</innerclass>
    <innerclass refid="structxensiv__pasco2__measurement__config__t_8b" prot="public">xensiv_pasco2_measurement_config_t.b</innerclass>
    <innerclass refid="structxensiv__pasco2__interrupt__config__t_8b" prot="public">xensiv_pasco2_interrupt_config_t.b</innerclass>
    <innerclass refid="structxensiv__pasco2__meas__status__t_8b" prot="public">xensiv_pasco2_meas_status_t.b</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__board__libs_1ga903d93f0ab6d683de4d4687c4ddd76b5" prot="public" static="no">
        <name>XENSIV_PASCO2_OK</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Result code indicating a successful operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="61" column="9" bodyfile="xensiv_pasco2.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga5e84f685d2d853703ecacb7e43292b79" prot="public" static="no">
        <name>XENSIV_PASCO2_ERR_COMM</name>
        <initializer>(1)</initializer>
        <briefdescription>
<para>Result code indicating a communication error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="63" column="9" bodyfile="xensiv_pasco2.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1gab9870212895620e8e0dfaaee561fcbb0" prot="public" static="no">
        <name>XENSIV_PASCO2_ERR_WRITE_TOO_LARGE</name>
        <initializer>(2)</initializer>
        <briefdescription>
<para>Result code indicating that an unexpectedly large I2C write was requested which is not supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="65" column="9" bodyfile="xensiv_pasco2.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga3b4080fcd4374096aefd559eb8899a52" prot="public" static="no">
        <name>XENSIV_PASCO2_ERR_NOT_READY</name>
        <initializer>(3)</initializer>
        <briefdescription>
<para>Result code indicating that the sensor is not yet ready after reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="67" column="9" bodyfile="xensiv_pasco2.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga29b2c43f6fbcc00ff7b712b72ca92735" prot="public" static="no">
        <name>XENSIV_PASCO2_ICCERR</name>
        <initializer>(4)</initializer>
        <briefdescription>
<para>Result code indicating whether a non-valid command has been received by the serial communication interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="69" column="9" bodyfile="xensiv_pasco2.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1gab1ace4803195dcfb9bd6a57aec95f8bc" prot="public" static="no">
        <name>XENSIV_PASCO2_ORVS</name>
        <initializer>(5)</initializer>
        <briefdescription>
<para>Result code indicating whether a condition where VDD12V has been outside the specified valid range has been detected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="71" column="9" bodyfile="xensiv_pasco2.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga690e80c9cce92a12d6b93510878339b5" prot="public" static="no">
        <name>XENSIV_PASCO2_ORTMP</name>
        <initializer>(6)</initializer>
        <briefdescription>
<para>Result code indicating whether a condition where the temperature has been outside the specified valid range has been detected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="73" column="9" bodyfile="xensiv_pasco2.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga9768e08fad2ee5c8ebaddec5819e7715" prot="public" static="no">
        <name>XENSIV_PASCO2_READ_NRDY</name>
        <initializer>(7)</initializer>
        <briefdescription>
<para>Result code indicating that a new CO2 value is not yet ready. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="75" column="9" bodyfile="xensiv_pasco2.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga32290e82ba83241c48063b6e65e27050" prot="public" static="no">
        <name>XENSIV_PASCO2_MEAS_RATE_MIN</name>
        <initializer>(5U)</initializer>
        <briefdescription>
<para>Minimum allowed measurement rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="78" column="9" bodyfile="xensiv_pasco2.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga8127198286d3b4083fdc0e815b4cb488" prot="public" static="no">
        <name>XENSIV_PASCO2_MEAS_RATE_MAX</name>
        <initializer>(4095U)</initializer>
        <briefdescription>
<para>Maximum allowed measurement rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="81" column="9" bodyfile="xensiv_pasco2.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__board__libs_1ga4fe8f5f20ac2d5ae081592841e7a5391" prot="public" static="no">
        <name>XENSIV_PASCO2_I2C_ADDR</name>
        <initializer>(0x28U)</initializer>
        <briefdescription>
<para>I2C address of the XENSIVâ„¢ PASCO2 sensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="84" column="9" bodyfile="xensiv_pasco2.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__group__board__libs_1ga0fb0b6cde2e7d1ce92e0e126791fe9ce" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_cmd_t</name>
        <enumvalue id="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea4886ef1600c106f8d672ce61a3947c4e" prot="public">
          <name>XENSIV_PASCO2_CMD_SOFT_RESET</name>
          <initializer>= 0xA3U</initializer>
          <briefdescription>
<para>Soft reset the sensor. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9ceacb9d7a28e46ae054429a92414811c865" prot="public">
          <name>XENSIV_PASCO2_CMD_RESET_ABOC</name>
          <initializer>= 0xBCU</initializer>
          <briefdescription>
<para>Resets the ABOC context. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea503e2ec908264c62241411b15b19d888" prot="public">
          <name>XENSIV_PASCO2_CMD_SAVE_FCS_CALIB_OFFSET</name>
          <initializer>= 0xCFU</initializer>
          <briefdescription>
<para>Saves the force calibration offset into the non volatile memory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea17999652e04d8ec852839fe0656f64ed" prot="public">
          <name>XENSIV_PASCO2_CMD_RESET_FCS</name>
          <initializer>= 0xFCU</initializer>
          <briefdescription>
<para>Resets the forced calibration correction factor. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining the different device commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="89" column="1" bodyfile="xensiv_pasco2.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1gaf74e06da88cf86200c27f319dc31cd02" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_op_mode_t</name>
        <enumvalue id="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02af23e7705a0df1d4ffe1b29ffb380cae9" prot="public">
          <name>XENSIV_PASCO2_OP_MODE_IDLE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>The device does not perform any CO2 concentration measurement. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02a36b988b8e81b47447fec5bf9276003ce" prot="public">
          <name>XENSIV_PASCO2_OP_MODE_SINGLE</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>The device triggers a single measurement sequence. </para>
          </briefdescription>
          <detaileddescription>
<para>At the end of the measurement sequence, the device automatically goes back to idle mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02a5194caafa19e79e022ea120caa17d4b6" prot="public">
          <name>XENSIV_PASCO2_OP_MODE_CONTINUOUS</name>
          <initializer>= 2U</initializer>
          <briefdescription>
<para>The device periodically triggers a CO2 concentration measurement sequence. </para>
          </briefdescription>
          <detaileddescription>
<para>Once a measurement sequence is completed, the device goes back to an inactive state and wakes up automatically for the next measurement sequence. The measurement period can be programmed from 5 seconds to 4095 seconds. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining the different device operating modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="98" column="1" bodyfile="xensiv_pasco2.h" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1ga06608546c54577ef3486d1794201362f" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_boc_cfg_t</name>
        <enumvalue id="group__group__board__libs_1gga06608546c54577ef3486d1794201362fa60f97a88b76132ec5a426f32ae2bb61b" prot="public">
          <name>XENSIV_PASCO2_BOC_CFG_DISABLE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>No offset compensation occurs. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga06608546c54577ef3486d1794201362fa2f3cae70a6073e536595f8db808652d4" prot="public">
          <name>XENSIV_PASCO2_BOC_CFG_AUTOMATIC</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>The offset is periodically updated at each BOC computation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga06608546c54577ef3486d1794201362fabb144a4ce66ce84fce0615140ec128fa" prot="public">
          <name>XENSIV_PASCO2_BOC_CFG_FORCED</name>
          <initializer>= 2U</initializer>
          <briefdescription>
<para>Forced compensation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining the different device baseline offset compensation (BOC) modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="108" column="1" bodyfile="xensiv_pasco2.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1ga0bd29f11c6d5abff29998ac6848f4683" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_pwm_mode_t</name>
        <enumvalue id="group__group__board__libs_1gga0bd29f11c6d5abff29998ac6848f4683af315b567a388ca925d3d249624d4856f" prot="public">
          <name>XENSIV_PASCO2_PWM_MODE_SINGLE_PULSE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>PWM single-pulse. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga0bd29f11c6d5abff29998ac6848f4683aaaff349e14c405a3bae1918e7e7ed1bd" prot="public">
          <name>XENSIV_PASCO2_PWM_MODE_TRAIN_PULSE</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>PWM pulse-train mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining the PWM mode configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="116" column="1" bodyfile="xensiv_pasco2.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1ga1822f1abc722b317d95bbe888fa71855" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_interrupt_type_t</name>
        <enumvalue id="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>Pin INT is configured as push-pull and is active LOW. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855a7dfab1601c5b0f4a413a604ba41c9241" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_TYPE_HIGH_ACTIVE</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>Pin INT is configured as push-pull and is active HIGH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining different interrupt active levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="123" column="1" bodyfile="xensiv_pasco2.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1gaea17466bbef4f0b4f2b06ea8b6ee3bd4" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_interrupt_function_t</name>
        <enumvalue id="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a365987c012f83651e7ba776f77199faa" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_FUNCTION_NONE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>Pin INT is inactive. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a4a1caf908c4ba9779cda3e20ea43cd67" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_FUNCTION_ALARM</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>Pin INT is configured as the alarm threshold violation notification pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a44ce217f8dd88627466fababd822443c" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_FUNCTION_DRDY</name>
          <initializer>= 2U</initializer>
          <briefdescription>
<para>Pin INT is configured as the data ready notification pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4ac8ebcfdbc71eeb75808cdd318e77af67" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_FUNCTION_BUSY</name>
          <initializer>= 3U</initializer>
          <briefdescription>
<para>Pin INT is configured as the sensor busy notification pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a6a7a8d2e68bfdeb5e51fc07b923cfe4d" prot="public">
          <name>XENSIV_PASCO2_INTERRUPT_FUNCTION_EARLY</name>
          <initializer>= 4U</initializer>
          <briefdescription>
<para>Pin INT is configured as the early measurement start notification pin. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="note"><para>This function is available only in continuous mode </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining different pin interrupt functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="130" column="1" bodyfile="xensiv_pasco2.h" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__board__libs_1gad46a9f4100efaac3b2d143e8683d90e1" prot="public" static="no" strong="no">
        <type></type>
        <name>xensiv_pasco2_alarm_type_t</name>
        <enumvalue id="group__group__board__libs_1ggad46a9f4100efaac3b2d143e8683d90e1a9d0a5b56dcbbd92a2ed5246c27e36d7e" prot="public">
          <name>XENSIV_PASCO2_ALARM_TYPE_HIGH_TO_LOW</name>
          <initializer>= 0U</initializer>
          <briefdescription>
<para>CO2 ppm value falling below the alarm threshold. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__board__libs_1ggad46a9f4100efaac3b2d143e8683d90e1ae028e38de703a09473d0ec4be708b197" prot="public">
          <name>XENSIV_PASCO2_ALARM_TYPE_LOW_TO_HIGH</name>
          <initializer>= 1U</initializer>
          <briefdescription>
<para>CO2 ppm value rising above the alarm threshold. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining whether an alarm is issued in the case of a lower or higher threshold violation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="141" column="1" bodyfile="xensiv_pasco2.h" bodystart="142" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__group__board__libs_1gac8f54ac6a19cb5c97ee31cedfc95963c" prot="public" static="no">
        <type>int32_t(*</type>
        <definition>typedef int32_t(* xensiv_pasco2_read_fptr_t) (const struct xensiv_pasco2 *dev, uint8_t reg_addr, uint8_t *data, uint8_t len)</definition>
        <argsstring>)(const struct xensiv_pasco2 *dev, uint8_t reg_addr, uint8_t *data, uint8_t len)</argsstring>
        <name>xensiv_pasco2_read_fptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="218" column="9" bodyfile="xensiv_pasco2.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__group__board__libs_1gac8627021b867b39067fc67d6c365e6ef" prot="public" static="no">
        <type>int32_t(*</type>
        <definition>typedef int32_t(* xensiv_pasco2_write_fptr_t) (const struct xensiv_pasco2 *dev, uint8_t reg_addr, const uint8_t *data, uint8_t len)</definition>
        <argsstring>)(const struct xensiv_pasco2 *dev, uint8_t reg_addr, const uint8_t *data, uint8_t len)</argsstring>
        <name>xensiv_pasco2_write_fptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="221" column="9" bodyfile="xensiv_pasco2.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__board__libs_1ga38fe4b44ddd282af3f28bc4080932a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_init_i2c</definition>
        <argsstring>(xensiv_pasco2_t *dev, void *ctx)</argsstring>
        <name>xensiv_pasco2_init_i2c</name>
        <param>
          <type><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Initializes the XENSIVâ„¢ PAS CO2 device using the I2C interface. </para>
        </briefdescription>
        <detaileddescription>
<para>It initializes the dev structure, verifies the integrity of the communication layer of the serial communication interface, and checks whether the sensor is ready</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a XENSIVâ„¢ PAS CO2 sensor device structure allocated by the user, but the init function will initialize its contents </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the platform-specific I2C communication handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the initialization was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="246" column="9" bodyfile="xensiv_pasco2.c" bodystart="250" bodyend="260" declfile="xensiv_pasco2.h" declline="246" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga9fa617ee552cb1672d7d1d4fedd54783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_init_uart</definition>
        <argsstring>(xensiv_pasco2_t *dev, void *ctx)</argsstring>
        <name>xensiv_pasco2_init_uart</name>
        <param>
          <type><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Initializes the XENSIVâ„¢ PAS CO2 device using the UART interface. </para>
        </briefdescription>
        <detaileddescription>
<para>It initializes the dev structure, verifies the integrity of the communication layer of the serial communication interface, and checks whether the sensor is ready</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a XENSIVâ„¢ PAS CO2 sensor device structure allocated by user, but the init function will initialize its contents </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the platform-specific I2C communication handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the initialization was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="257" column="9" bodyfile="xensiv_pasco2.c" bodystart="262" bodyend="272" declfile="xensiv_pasco2.h" declline="257" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gabd9c4332ede9561912e3bd4d761a6318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_reg</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t reg_addr, const uint8_t *data, uint8_t len)</argsstring>
        <name>xensiv_pasco2_set_reg</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Writes the given data buffer into the sensor device. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes the given data buffer to the sensor register map starting at the register address</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Start register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer to be written in the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes of data to be written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if writing to the register was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="269" column="9" bodyfile="xensiv_pasco2.c" bodystart="274" bodyend="283" declfile="xensiv_pasco2.h" declline="269" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gaa0c49395df5ae25d9c9377d228e2f0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_reg</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t reg_addr, uint8_t *data, uint8_t len)</argsstring>
        <name>xensiv_pasco2_get_reg</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Reads from the sensor device into the given data buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads from the sensor register map sensor starting at register address into the given data buffer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Start register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer to store the register values of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes of data to be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if reading from the register was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="281" column="9" bodyfile="xensiv_pasco2.c" bodystart="285" bodyend="294" declfile="xensiv_pasco2.h" declline="281" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gad695b81af7d8a450f013be02d92a841c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_id</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_id_t *id)</argsstring>
        <name>xensiv_pasco2_get_id</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__id__t" kindref="compound">xensiv_pasco2_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the sensor device product and version ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device product and version ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: Refer to the register map description of the XENSIVâ„¢ PAS CO2 device for detailed information on the ID format </para>
</simplesect>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if reading the product id was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="291" column="9" bodyfile="xensiv_pasco2.c" bodystart="296" bodyend="302" declfile="xensiv_pasco2.h" declline="291" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gac07d75efc43dcc2e4ab66fc2232df3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_status</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_status_t *status)</argsstring>
        <name>xensiv_pasco2_get_status</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__status__t" kindref="compound">xensiv_pasco2_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Gets the sensor device status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if reading the device status was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="300" column="9" bodyfile="xensiv_pasco2.c" bodystart="304" bodyend="310" declfile="xensiv_pasco2.h" declline="300" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga2c0849ef97a9fa3f5697121b47776cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_clear_status</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t mask)</argsstring>
        <name>xensiv_pasco2_clear_status</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clears the sensor device status bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>ORed combination of the following values: <itemizedlist>
<listitem><para>XENSIV_PASCO2_REG_SENS_STS_ICCER_CLR_MSK Clears the ICCER status sticky bit </para>
</listitem>
<listitem><para>XENSIV_PASCO2_REG_SENS_STS_ORVS_CLR_MSK Clears the ORVS status sticky bit </para>
</listitem>
<listitem><para>XENSIV_PASCO2_REG_SENS_STS_ORTMP_CLR_MSK Clears the ORTMP status sticky bit </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the status bits clearing was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="312" column="9" bodyfile="xensiv_pasco2.c" bodystart="312" bodyend="317" declfile="xensiv_pasco2.h" declline="312" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga7dcc95773283e5c86793d3b9311dbff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_interrupt_config</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_interrupt_config_t *int_config)</argsstring>
        <name>xensiv_pasco2_get_interrupt_config</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref> *</type>
          <declname>int_config</declname>
        </param>
        <briefdescription>
<para>Gets the sensor device interrupt configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">int_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device interrupt configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if getting the interrupt configuration was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="321" column="9" bodyfile="xensiv_pasco2.c" bodystart="319" bodyend="325" declfile="xensiv_pasco2.h" declline="321" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga8cddfe96e78141108553b0725733c2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_interrupt_config</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_interrupt_config_t int_config)</argsstring>
        <name>xensiv_pasco2_set_interrupt_config</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref></type>
          <declname>int_config</declname>
        </param>
        <briefdescription>
<para>Sets the sensor device interrupt configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_config</parametername>
</parameternamelist>
<parameterdescription>
<para>New sensor device interrupt configuration to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the interrupt configuration was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="330" column="9" bodyfile="xensiv_pasco2.c" bodystart="327" bodyend="332" declfile="xensiv_pasco2.h" declline="330" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gab17460e6f7abc0587d7d2fa4f7581890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_measurement_config</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_measurement_config_t *meas_config)</argsstring>
        <name>xensiv_pasco2_get_measurement_config</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__measurement__config__t" kindref="compound">xensiv_pasco2_measurement_config_t</ref> *</type>
          <declname>meas_config</declname>
        </param>
        <briefdescription>
<para>Gets the sensor device measurement configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">meas_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device measurement configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if getting the measurement configuration was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="339" column="9" bodyfile="xensiv_pasco2.c" bodystart="334" bodyend="340" declfile="xensiv_pasco2.h" declline="339" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga62610f2a9ace6c3c6c4757a94dd20bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_measurement_config</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_measurement_config_t meas_config)</argsstring>
        <name>xensiv_pasco2_set_measurement_config</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__measurement__config__t" kindref="compound">xensiv_pasco2_measurement_config_t</ref></type>
          <declname>meas_config</declname>
        </param>
        <briefdescription>
<para>Sets the sensor device measurement configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meas_config</parametername>
</parameternamelist>
<parameterdescription>
<para>New sensor device measurement configuration to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the measurement configuration was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="348" column="9" bodyfile="xensiv_pasco2.c" bodystart="342" bodyend="347" declfile="xensiv_pasco2.h" declline="348" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gab38f6448bea3e370f3901bc09f53d83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_result</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t *val)</argsstring>
        <name>xensiv_pasco2_get_result</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Gets the current CO2 ppm values from the sensor device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the CO2 ppm value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if obtaining the current CO2 value successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="357" column="9" bodyfile="xensiv_pasco2.c" bodystart="349" bodyend="371" declfile="xensiv_pasco2.h" declline="357" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga1f306466b229f160d02452ebf536b986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_measurement_rate</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t val)</argsstring>
        <name>xensiv_pasco2_set_measurement_rate</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the measurement rate for continuos mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New measurement rate to apply [5-4095s] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the measurement rate was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="366" column="9" bodyfile="xensiv_pasco2.c" bodystart="373" bodyend="380" declfile="xensiv_pasco2.h" declline="366" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga7f7b0d945604ed1b549eafb67275c99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_measurement_status</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_meas_status_t *status)</argsstring>
        <name>xensiv_pasco2_get_measurement_status</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="unionxensiv__pasco2__meas__status__t" kindref="compound">xensiv_pasco2_meas_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Gets the measurement status of the sensor device. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to check if a new CO2 concentration value is available to be read (status.b.drdy) using <ref refid="group__group__board__libs_1gab38f6448bea3e370f3901bc09f53d83a" kindref="member">xensiv_pasco2_get_result</ref> Used to check if an interrupt is asserted (status.b.int_sts). Used to check if an alarm is triggered (status.b.alarm)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device measurement status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if getting the measurement was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="378" column="9" bodyfile="xensiv_pasco2.c" bodystart="382" bodyend="388" declfile="xensiv_pasco2.h" declline="378" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga47d8b24e5fb307ef67111720290f6c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_clear_measurement_status</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t mask)</argsstring>
        <name>xensiv_pasco2_clear_measurement_status</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clears the measurement status of the sensor device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>ORed combination of the following values: <itemizedlist>
<listitem><para>XENSIV_PASCO2_REG_MEAS_STS_INT_STS_CLR_MSK Clears the sticky bit MEAS_STS.INT_STS and forces the INT pin to inactive level </para>
</listitem>
<listitem><para>XENSIV_PASCO2_REG_MEAS_STS_ALARM_CLR_MSK Clears the sticky bit MEAS_STS.ALARM </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if clearing the measurement status selected bits was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="389" column="9" bodyfile="xensiv_pasco2.c" bodystart="390" bodyend="395" declfile="xensiv_pasco2.h" declline="389" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gaba1f03526ef8182b9b36b7f428436bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_alarm_threshold</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t val)</argsstring>
        <name>xensiv_pasco2_set_alarm_threshold</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the alarm threshold. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New alarm threshold value to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the alarm threshold was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="398" column="9" bodyfile="xensiv_pasco2.c" bodystart="397" bodyend="403" declfile="xensiv_pasco2.h" declline="398" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gad4af4f6ec5c55181e140ad0cd0463e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_pressure_compensation</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t val)</argsstring>
        <name>xensiv_pasco2_set_pressure_compensation</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the pressure compensation value. </para>
        </briefdescription>
        <detaileddescription>
<para>The CO2 concentration value acquired by the sensor is dependent on the external atmospheric pressure. To compensate for this effect, the application can provide the value of the atmospheric pressure using this function. At the end of a measurement sequence, the device reads the pressure value and applies it for compensation on the CO2 concentration value before storing it into the result registers, and can be retrieved using <ref refid="group__group__board__libs_1gab38f6448bea3e370f3901bc09f53d83a" kindref="member">xensiv_pasco2_get_result</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New pressure compensation value to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the pressure reference value was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="412" column="9" bodyfile="xensiv_pasco2.c" bodystart="405" bodyend="411" declfile="xensiv_pasco2.h" declline="412" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gac41c0657da3b189dd8de64594da1e1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_offset_compensation</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t val)</argsstring>
        <name>xensiv_pasco2_set_offset_compensation</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the offset compensation value Defines the reference value used for ABOC and force calibration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New pressure calibration value to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if setting the measurement offset was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="422" column="9" bodyfile="xensiv_pasco2.c" bodystart="413" bodyend="419" declfile="xensiv_pasco2.h" declline="422" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga302ba6bdd42dff56d0ab6faafe34d4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_set_scratch_pad</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t val)</argsstring>
        <name>xensiv_pasco2_set_scratch_pad</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Writes to the scratchpad register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New scratchpad register value to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if writing to the scratch pad register was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="431" column="9" bodyfile="xensiv_pasco2.c" bodystart="421" bodyend="426" declfile="xensiv_pasco2.h" declline="431" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga17cc7bf76385781d4ba3a8655d5e91f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_get_scratch_pad</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint8_t *val)</argsstring>
        <name>xensiv_pasco2_get_scratch_pad</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Reads from the scratchpad register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to populate with the sensor device scratchpad register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if reading from the scratch pad register was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="440" column="9" bodyfile="xensiv_pasco2.c" bodystart="428" bodyend="434" declfile="xensiv_pasco2.h" declline="440" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga889c7a85b1684161ff6aa2268f3a9de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_cmd</definition>
        <argsstring>(const xensiv_pasco2_t *dev, xensiv_pasco2_cmd_t cmd)</argsstring>
        <name>xensiv_pasco2_cmd</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__group__board__libs_1ga0fb0b6cde2e7d1ce92e0e126791fe9ce" kindref="member">xensiv_pasco2_cmd_t</ref></type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Triggers a sensor device command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command to trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if triggering the command was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="449" column="9" bodyfile="xensiv_pasco2.c" bodystart="436" bodyend="441" declfile="xensiv_pasco2.h" declline="449" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga870276bbf297981a4c09adc04637cd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_start_single_mode</definition>
        <argsstring>(const xensiv_pasco2_t *dev)</argsstring>
        <name>xensiv_pasco2_start_single_mode</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Triggers a single mode measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if starting the measurement was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="457" column="9" bodyfile="xensiv_pasco2.c" bodystart="443" bodyend="467" declfile="xensiv_pasco2.h" declline="457" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1gafcd452d674763aa73e6be0720f86cdf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_start_continuous_mode</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t val)</argsstring>
        <name>xensiv_pasco2_start_continuous_mode</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Starts measurements in continuous mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurement rate to apply [5-4095s] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if starting the measurements was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="466" column="9" bodyfile="xensiv_pasco2.c" bodystart="469" bodyend="500" declfile="xensiv_pasco2.h" declline="466" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga9333d87948220d17c06fc890086c856a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_perform_forced_compensation</definition>
        <argsstring>(const xensiv_pasco2_t *dev, uint16_t co2_ref)</argsstring>
        <name>xensiv_pasco2_perform_forced_compensation</name>
        <param>
          <type>const <ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>co2_ref</declname>
        </param>
        <briefdescription>
<para>Performs force compensation. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to calculate the offset compensation when the sensor is exposed to a CO2 reference value. The device is left is idle mode and the new offset compensation value is stored in non-volatile memory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the XENSIVâ„¢ PAS CO2 sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command to trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the force compensation was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="477" column="9" bodyfile="xensiv_pasco2.c" bodystart="502" bodyend="551" declfile="xensiv_pasco2.h" declline="477" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga79ba3ff2b6d3b6e0d59277ad2c066295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_i2c_transfer</definition>
        <argsstring>(void *ctx, uint16_t dev_addr, const uint8_t *tx_buffer, size_t tx_len, uint8_t *rx_buffer, size_t rx_len)</argsstring>
        <name>xensiv_pasco2_plat_i2c_transfer</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dev_addr</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>tx_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tx_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rx_len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to perform I2C write/read transfer. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronously writes a block of data and optionally receive a block of data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Target platform object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>device address (7-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C send data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_len</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C send data size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C receive data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Can be NULL to indicate no read access. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rx_len</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C receive data size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the I2C transfer was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="490" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="124" bodyend="141" declfile="xensiv_pasco2.h" declline="490" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga30258b2d0b775dd70dac784ba7583a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_uart_read</definition>
        <argsstring>(void *ctx, uint8_t *data, size_t len)</argsstring>
        <name>xensiv_pasco2_plat_uart_read</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to read over UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>UART object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to receive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the UART read was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="500" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="143" bodyend="167" declfile="xensiv_pasco2.h" declline="500" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga9300d953c5b0e034b91c1eb35e5b6a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t xensiv_pasco2_plat_uart_write</definition>
        <argsstring>(void *ctx, uint8_t *data, size_t len)</argsstring>
        <name>xensiv_pasco2_plat_uart_write</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to write over UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>UART object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmit buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to transmit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XENSIV_PASCO2_OK if the UART write was successful; an error indicating what went wrong otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="510" column="9" bodyfile="xensiv_pasco2_mtb.c" bodystart="169" bodyend="186" declfile="xensiv_pasco2.h" declline="510" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga6b0f690782033eb82ac184e541152801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xensiv_pasco2_plat_delay</definition>
        <argsstring>(uint32_t ms)</argsstring>
        <name>xensiv_pasco2_plat_delay</name>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function that waits for a specified time period in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of miliseconds to wait for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="517" column="6" bodyfile="xensiv_pasco2_mtb.c" bodystart="188" bodyend="191" declfile="xensiv_pasco2.h" declline="517" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga227451919676d916a38ac90daea339b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t xensiv_pasco2_plat_htons</definition>
        <argsstring>(uint16_t x)</argsstring>
        <name>xensiv_pasco2_plat_htons</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function to reverse the byte order (16-bit) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to reverse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reversed value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="525" column="10" bodyfile="xensiv_pasco2_mtb.c" bodystart="193" bodyend="196" declfile="xensiv_pasco2.h" declline="525" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__group__board__libs_1ga1a3f8502b60fd6f507b66dc91210b8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xensiv_pasco2_plat_assert</definition>
        <argsstring>(int expr)</argsstring>
        <name>xensiv_pasco2_plat_assert</name>
        <param>
          <type>int</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Target platform-specific function that implements a runtime assertion; used to verify the assumptions made by the program and take appropiate actions if assumption is false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be verified </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xensiv_pasco2.h" line="532" column="6" bodyfile="xensiv_pasco2_mtb.c" bodystart="198" bodyend="201" declfile="xensiv_pasco2.h" declline="532" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Description: This file contains the functions for interacting with the XENSIVâ„¢ PAS CO2 sensor. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2021 Infineon Technologies AG SPDX-License-Identifier: Apache-2.0</para>
</simplesect>
Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim></para>
<para>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***********************************************************************************************/</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#ifndef<sp/>XENSIV_PASCO2_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xensiv_pasco2_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/**************************************<sp/>Macros<sp/>*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ERR_COMM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ERR_WRITE_TOO_LARGE<sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ERR_NOT_READY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ICCERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ORVS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_ORTMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_READ_NRDY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_MEAS_RATE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(5U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_MEAS_RATE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4095U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#define<sp/>XENSIV_PASCO2_I2C_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x28U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*********************************<sp/>Type<sp/>definitions<sp/>**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea4886ef1600c106f8d672ce61a3947c4e" kindref="member">XENSIV_PASCO2_CMD_SOFT_RESET</ref><sp/>=<sp/>0xA3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9ceacb9d7a28e46ae054429a92414811c865" kindref="member">XENSIV_PASCO2_CMD_RESET_ABOC</ref><sp/>=<sp/>0xBCU,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea503e2ec908264c62241411b15b19d888" kindref="member">XENSIV_PASCO2_CMD_SAVE_FCS_CALIB_OFFSET</ref><sp/>=<sp/>0xCFU,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0fb0b6cde2e7d1ce92e0e126791fe9cea17999652e04d8ec852839fe0656f64ed" kindref="member">XENSIV_PASCO2_CMD_RESET_FCS</ref><sp/>=<sp/>0xFCU,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1ga0fb0b6cde2e7d1ce92e0e126791fe9ce" kindref="member">xensiv_pasco2_cmd_t</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02af23e7705a0df1d4ffe1b29ffb380cae9" kindref="member">XENSIV_PASCO2_OP_MODE_IDLE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02a36b988b8e81b47447fec5bf9276003ce" kindref="member">XENSIV_PASCO2_OP_MODE_SINGLE</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaf74e06da88cf86200c27f319dc31cd02a5194caafa19e79e022ea120caa17d4b6" kindref="member">XENSIV_PASCO2_OP_MODE_CONTINUOUS</ref><sp/>=<sp/>2U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1gaf74e06da88cf86200c27f319dc31cd02" kindref="member">xensiv_pasco2_op_mode_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga06608546c54577ef3486d1794201362fa60f97a88b76132ec5a426f32ae2bb61b" kindref="member">XENSIV_PASCO2_BOC_CFG_DISABLE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga06608546c54577ef3486d1794201362fa2f3cae70a6073e536595f8db808652d4" kindref="member">XENSIV_PASCO2_BOC_CFG_AUTOMATIC</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga06608546c54577ef3486d1794201362fabb144a4ce66ce84fce0615140ec128fa" kindref="member">XENSIV_PASCO2_BOC_CFG_FORCED</ref><sp/>=<sp/>2U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1ga06608546c54577ef3486d1794201362f" kindref="member">xensiv_pasco2_boc_cfg_t</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0bd29f11c6d5abff29998ac6848f4683af315b567a388ca925d3d249624d4856f" kindref="member">XENSIV_PASCO2_PWM_MODE_SINGLE_PULSE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga0bd29f11c6d5abff29998ac6848f4683aaaff349e14c405a3bae1918e7e7ed1bd" kindref="member">XENSIV_PASCO2_PWM_MODE_TRAIN_PULSE</ref><sp/>=<sp/>1U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1ga0bd29f11c6d5abff29998ac6848f4683" kindref="member">xensiv_pasco2_pwm_mode_t</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855aecc3f516c45cfb08e1c9e5d81ef21c9e" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_LOW_ACTIVE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1gga1822f1abc722b317d95bbe888fa71855a7dfab1601c5b0f4a413a604ba41c9241" kindref="member">XENSIV_PASCO2_INTERRUPT_TYPE_HIGH_ACTIVE</ref><sp/>=<sp/>1U<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1ga1822f1abc722b317d95bbe888fa71855" kindref="member">xensiv_pasco2_interrupt_type_t</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a365987c012f83651e7ba776f77199faa" kindref="member">XENSIV_PASCO2_INTERRUPT_FUNCTION_NONE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a4a1caf908c4ba9779cda3e20ea43cd67" kindref="member">XENSIV_PASCO2_INTERRUPT_FUNCTION_ALARM</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a44ce217f8dd88627466fababd822443c" kindref="member">XENSIV_PASCO2_INTERRUPT_FUNCTION_DRDY</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4ac8ebcfdbc71eeb75808cdd318e77af67" kindref="member">XENSIV_PASCO2_INTERRUPT_FUNCTION_BUSY</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggaea17466bbef4f0b4f2b06ea8b6ee3bd4a6a7a8d2e68bfdeb5e51fc07b923cfe4d" kindref="member">XENSIV_PASCO2_INTERRUPT_FUNCTION_EARLY</ref><sp/>=<sp/>4U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1gaea17466bbef4f0b4f2b06ea8b6ee3bd4" kindref="member">xensiv_pasco2_interrupt_function_t</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggad46a9f4100efaac3b2d143e8683d90e1a9d0a5b56dcbbd92a2ed5246c27e36d7e" kindref="member">XENSIV_PASCO2_ALARM_TYPE_HIGH_TO_LOW</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__board__libs_1ggad46a9f4100efaac3b2d143e8683d90e1ae028e38de703a09473d0ec4be708b197" kindref="member">XENSIV_PASCO2_ALARM_TYPE_LOW_TO_HIGH</ref><sp/>=<sp/>1U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><ref refid="group__group__board__libs_1gad46a9f4100efaac3b2d143e8683d90e1" kindref="member">xensiv_pasco2_alarm_type_t</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="unionxensiv__pasco2__id__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150" refid="structxensiv__pasco2__id__t_8b" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rev:5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prod:3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint8_t<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><ref refid="unionxensiv__pasco2__id__t" kindref="compound">xensiv_pasco2_id_t</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="unionxensiv__pasco2__status__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161" refid="structxensiv__pasco2__status__t_8b" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:3;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>iccerr:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>orvs:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ortmp:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pwm_dis_st:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sen_rdy:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>uint8_t<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/><ref refid="unionxensiv__pasco2__status__t" kindref="compound">xensiv_pasco2_status_t</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="unionxensiv__pasco2__measurement__config__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177" refid="structxensiv__pasco2__measurement__config__t_8b" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>op_mode:2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>boc_cfg:2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pwm_mode:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pwm_outen:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:2;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>uint8_t<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/><ref refid="unionxensiv__pasco2__measurement__config__t" kindref="compound">xensiv_pasco2_measurement_config_t</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="unionxensiv__pasco2__interrupt__config__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191" refid="structxensiv__pasco2__interrupt__config__t_8b" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>alarm_typ:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>int_func:3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>int_typ:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:3;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>uint8_t<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="unionxensiv__pasco2__meas__status__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204" refid="structxensiv__pasco2__meas__status__t_8b" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:2;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>alarm:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>int_sts:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>drdy:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:3;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>uint8_t<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><ref refid="unionxensiv__pasco2__meas__status__t" kindref="compound">xensiv_pasco2_meas_status_t</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xensiv_pasco2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>pointer<sp/>to<sp/>the<sp/>platform-specific<sp/>function<sp/>for<sp/>reading<sp/>the<sp/>sensor<sp/>registers<sp/>via<sp/>I2C/UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>(*xensiv_pasco2_read_fptr_t)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xensiv_pasco2<sp/>*<sp/>dev,<sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*<sp/>data,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>pointer<sp/>to<sp/>the<sp/>platform-specific<sp/>function<sp/>for<sp/>writing<sp/><sp/>the<sp/>sensor<sp/>registers<sp/>via<sp/>I2C/UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>(*xensiv_pasco2_write_fptr_t)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xensiv_pasco2<sp/>*<sp/>dev,<sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>data,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structxensiv__pasco2__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xensiv_pasco2</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>xensiv_pasco2_read_fptr_t<sp/>read;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>xensiv_pasco2_write_fptr_t<sp/>write;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}<sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*******************************<sp/>Function<sp/>prototypes<sp/>*************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga38fe4b44ddd282af3f28bc4080932a95" kindref="member">xensiv_pasco2_init_i2c</ref>(<ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga9fa617ee552cb1672d7d1d4fedd54783" kindref="member">xensiv_pasco2_init_uart</ref>(<ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gabd9c4332ede9561912e3bd4d761a6318" kindref="member">xensiv_pasco2_set_reg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>data,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gaa0c49395df5ae25d9c9377d228e2f0f4" kindref="member">xensiv_pasco2_get_reg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*<sp/>data,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gad695b81af7d8a450f013be02d92a841c" kindref="member">xensiv_pasco2_get_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__id__t" kindref="compound">xensiv_pasco2_id_t</ref><sp/>*<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gac07d75efc43dcc2e4ab66fc2232df3b6" kindref="member">xensiv_pasco2_get_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__status__t" kindref="compound">xensiv_pasco2_status_t</ref><sp/>*<sp/>status);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga2c0849ef97a9fa3f5697121b47776cfd" kindref="member">xensiv_pasco2_clear_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>mask);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga7dcc95773283e5c86793d3b9311dbff1" kindref="member">xensiv_pasco2_get_interrupt_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref><sp/>*<sp/>int_config);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga8cddfe96e78141108553b0725733c2b8" kindref="member">xensiv_pasco2_set_interrupt_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__interrupt__config__t" kindref="compound">xensiv_pasco2_interrupt_config_t</ref><sp/>int_config);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gab17460e6f7abc0587d7d2fa4f7581890" kindref="member">xensiv_pasco2_get_measurement_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__measurement__config__t" kindref="compound">xensiv_pasco2_measurement_config_t</ref><sp/>*<sp/>meas_config);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga62610f2a9ace6c3c6c4757a94dd20bef" kindref="member">xensiv_pasco2_set_measurement_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__measurement__config__t" kindref="compound">xensiv_pasco2_measurement_config_t</ref><sp/>meas_config);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gab38f6448bea3e370f3901bc09f53d83a" kindref="member">xensiv_pasco2_get_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>*<sp/>val);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga1f306466b229f160d02452ebf536b986" kindref="member">xensiv_pasco2_set_measurement_rate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>val);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga7f7b0d945604ed1b549eafb67275c99b" kindref="member">xensiv_pasco2_get_measurement_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="unionxensiv__pasco2__meas__status__t" kindref="compound">xensiv_pasco2_meas_status_t</ref><sp/>*<sp/>status);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga47d8b24e5fb307ef67111720290f6c8f" kindref="member">xensiv_pasco2_clear_measurement_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>mask);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gaba1f03526ef8182b9b36b7f428436bd4" kindref="member">xensiv_pasco2_set_alarm_threshold</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>val);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gad4af4f6ec5c55181e140ad0cd0463e87" kindref="member">xensiv_pasco2_set_pressure_compensation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>val);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gac41c0657da3b189dd8de64594da1e1a2" kindref="member">xensiv_pasco2_set_offset_compensation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>val);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga302ba6bdd42dff56d0ab6faafe34d4e1" kindref="member">xensiv_pasco2_set_scratch_pad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>val);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga17cc7bf76385781d4ba3a8655d5e91f6" kindref="member">xensiv_pasco2_get_scratch_pad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint8_t<sp/>*<sp/>val);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga889c7a85b1684161ff6aa2268f3a9de6" kindref="member">xensiv_pasco2_cmd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/><ref refid="group__group__board__libs_1ga0fb0b6cde2e7d1ce92e0e126791fe9ce" kindref="member">xensiv_pasco2_cmd_t</ref><sp/>cmd);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga870276bbf297981a4c09adc04637cd8b" kindref="member">xensiv_pasco2_start_single_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1gafcd452d674763aa73e6be0720f86cdf9" kindref="member">xensiv_pasco2_start_continuous_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>val);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga9333d87948220d17c06fc890086c856a" kindref="member">xensiv_pasco2_perform_forced_compensation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxensiv__pasco2__t" kindref="compound">xensiv_pasco2_t</ref><sp/>*<sp/>dev,<sp/>uint16_t<sp/>co2_ref);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga79ba3ff2b6d3b6e0d59277ad2c066295" kindref="member">xensiv_pasco2_plat_i2c_transfer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctx,<sp/>uint16_t<sp/>dev_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>tx_buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tx_len,<sp/>uint8_t<sp/>*<sp/>rx_buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rx_len);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga30258b2d0b775dd70dac784ba7583a02" kindref="member">xensiv_pasco2_plat_uart_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,<sp/>uint8_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">int32_t<sp/><ref refid="group__group__board__libs_1ga9300d953c5b0e034b91c1eb35e5b6a87" kindref="member">xensiv_pasco2_plat_uart_write</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,<sp/>uint8_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__group__board__libs_1ga6b0f690782033eb82ac184e541152801" kindref="member">xensiv_pasco2_plat_delay</ref>(uint32_t<sp/>ms);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">uint16_t<sp/><ref refid="group__group__board__libs_1ga227451919676d916a38ac90daea339b3" kindref="member">xensiv_pasco2_plat_htons</ref>(uint16_t<sp/>x);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__group__board__libs_1ga1a3f8502b60fd6f507b66dc91210b8b6" kindref="member">xensiv_pasco2_plat_assert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expr);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="xensiv_pasco2.h"/>
  </compounddef>
</doxygen>
